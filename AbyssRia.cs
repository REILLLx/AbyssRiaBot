using System.Linq;
using System.Runtime.CompilerServices;
using AbyssRiaCarBot.Controllers;
using AbyssRiaCarBot.Models;
using Newtonsoft.Json;
using Telegram.Bot;
using Telegram.Bot.Exceptions;
using Telegram.Bot.Types;
using Telegram.Bot.Extensions;
using Telegram.Bot.Polling;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.ReplyMarkups;
using Telegram.Bot.Types;

namespace AbyssRiaCarBot;

public class AbyssRia
{
   TelegramBotClient botClient = new TelegramBotClient("5868430035:AAGO_CVGWRCRKRY_2slLrSiPu8_NPseYvF8");
   CancellationToken cancellationToken = new CancellationToken();
   ReceiverOptions receiverOptions = new ReceiverOptions { AllowedUpdates = { } };
   public async Task Start()
   {
      botClient.StartReceiving(HandlerUpdateAsync, HandlerError, receiverOptions, cancellationToken);
      var botMe = await botClient.GetMeAsync();
      Console.WriteLine($"–ë–æ—Ç {botMe.Username} –ø–æ—á–∞–≤ —Ä–æ–±–æ—Ç—É");
      Console.ReadKey();
   }
   private Task HandlerError(ITelegramBotClient botClient, Exception exception, CancellationToken cancellationToken)
   {
      var ErrorMessage = exception switch
      {
         ApiRequestException apiRequestException => $"–ü–æ–º–∏–ª–∫–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –ê–ü–Ü:\n{apiRequestException.ErrorCode}" +
                                                    $"\n{apiRequestException.Message}",
         _ => exception.ToString()
      };
      Console.WriteLine(ErrorMessage);
      return Task.CompletedTask;
   }
   private async Task HandlerUpdateAsync(ITelegramBotClient botClient, Update update,
      CancellationToken cancellationToken)
   {
      if (update.Type == UpdateType.Message && update?.Message?.Text != null)
      {
         await HandlerMessageAsync(botClient, update.Message);
      }
   }
   ReplyKeyboardMarkup paramsKeyboard = new(new[]
      {

         new KeyboardButton[] { "üßΩ–ú–∞—Ä–∫–∞ —Ç–∞ –º–æ–¥–µ–ª—å", "üßº–ú–æ–¥–µ–ª—å" },
         new KeyboardButton[] { "üßº–¶—ñ–Ω–∞ —É $ –≤—ñ–¥", "üßΩ–¶—ñ–Ω–∞ —É $ –¥–æ" },
         new KeyboardButton[] { "üßΩ–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥", "üßº–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ" },
         new KeyboardButton[] { "üöÄ–î–æ –º–µ–Ω—é" }
      })
      { ResizeKeyboard = true };

   ReplyKeyboardMarkup menuKeyboard = new(new[]
      {
         new KeyboardButton[] { "üñ•–†–æ–∑–ø–æ—á–∞—Ç–∏ –ø–æ—à—É–∫" },
         new KeyboardButton[] { "üöò–ú–∞—Ä–∫–∞", "üèé–ú–æ–¥–µ–ª—å" },
         new KeyboardButton[] { "üí∏–¶—ñ–Ω–∞ —É $ –≤—ñ–¥", "üí∞–¶—ñ–Ω–∞ —É $ –¥–æ" },
         new KeyboardButton[] { "üìÖ–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥", "üóì–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ" },
         new KeyboardButton[] { "üèØ–ù–∞ –≥–æ–ª–æ–≤–Ω—É" },
         new KeyboardButton[] { "üßπ–û—á–∏—Å—Ç–∏—Ç–∏" }
      })
      { ResizeKeyboard = true };

   ReplyKeyboardMarkup nextKeyboard = new(new[]
      {
         new KeyboardButton[] { "‚¨ÖÔ∏è", "üíì", "‚û°Ô∏èÔ∏è" },
         new KeyboardButton[] { "ü§ñYoutube –æ–≥–ª—è–¥", "üõ†–°–¢–û —É –º—ñ—Å—Ç—ñ" },
         new KeyboardButton[] { "üèØ–ù–∞ –≥–æ–ª–æ–≤–Ω—É", "üåå–ü–æ—Ä—ñ–≤–Ω—è—Ç–∏" }
      })
      { ResizeKeyboard = true };

   ReplyKeyboardMarkup favKeyboard = new(new[]
      {
         new KeyboardButton[] { "‚óÄÔ∏è", "üóëÔ∏è", "‚ñ∂Ô∏è" },
         new KeyboardButton[] { "üèØ–ù–∞ –≥–æ–ª–æ–≤–Ω—É" }
      })
      { ResizeKeyboard = true };
   GeneralClient generalClient = new GeneralClient();
   GetIds idList = new GetIds();
   private GetIds withoutPIdList = new GetIds();
   private List<Mark> marksList = new List<Mark>();
   ReplyKeyboardMarkup startKeyBoard =
      new(new[] { new KeyboardButton[] { "‚ö°–®–≤–∏–¥–∫–∏–π –ø–æ—à—É–∫","üïµÔ∏è‚Äç‚ôÇÔ∏è–î–µ—Ç–∞–ª—å–Ω–∏–π –ø–æ—à—É–∫", "üíå–û–±—Ä–∞–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è" } })
         { ResizeKeyboard = true };

   private int year = DateTime.Now.Year;
   private Dictionary<long, CarParams> userParams = new Dictionary<long, CarParams>();
   private Dictionary<long, string> searchRequest = new Dictionary<long, string>();
   private Dictionary<long, string> userStage = new Dictionary<long, string>();
   private async Task HandlerMessageAsync(ITelegramBotClient botClient, Message message)
   {
      if (!userParams.ContainsKey(message.Chat.Id))
      {
         userParams.Add(message.Chat.Id, new CarParams());
      }
      CarParams userParameters = userParams[message.Chat.Id];
      
      if (message.Text == "/start")
      {
         try
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, "–í–∏–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é\n\n'‚ö°–®–≤–∏–¥–∫–∏–π –ø–æ—à—É–∫' - –ø–æ—à—É–∫ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤\n\n'üïµÔ∏è‚Äç‚ôÇÔ∏è–î–µ—Ç–∞–ª—å–Ω–∏–π –ø–æ—à—É–∫' - –ø–æ—à—É–∫ –∑–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏\n\n'üíå–û–±—Ä–∞–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è' - –≤–∞—à—ñ –æ–±—Ä–∞–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è", replyMarkup: startKeyBoard);
            userParameters.mark = "";
            userParameters.model = "";
            userParameters.startPrice = 0;
            userParameters.endPrice = 0;
            userParameters.startYear = 0;
            userParameters.endYear = 0;
            userParameters.i = 0;
            userParameters.k = 0;
            searchRequest[message.Chat.Id] = "";
            userStage[message.Chat.Id] = "";
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: startKeyBoard);
         }
      }
      else if (message.Text == "üèØ–ù–∞ –≥–æ–ª–æ–≤–Ω—É")
      {
         try
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, "–í–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ", replyMarkup: startKeyBoard);
            userParameters.mark = "";
            userParameters.model = "";
            userParameters.startPrice = 0;
            userParameters.endPrice = 0;
            userParameters.startYear = 0;
            userParameters.endYear = 0;
            userParameters.i = 0;
            userParameters.k = 0;
            searchRequest[message.Chat.Id] = "";
            userStage[message.Chat.Id] = "";
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: startKeyBoard);
         }
      }
      else if (message.Text == "‚ö°–®–≤–∏–¥–∫–∏–π –ø–æ—à—É–∫")
      {
         try
         {
            searchRequest[message.Chat.Id] = "Search";
            await botClient.SendTextMessageAsync(message.Chat.Id, "–†–æ–∑–ø–æ—á–Ω–µ–º–æ –ø–æ—à—É–∫");
            userParameters.idsList = await generalClient.GetIds();
            var announcment = await generalClient.GetInfo(userParameters.idsList.result.search_result.ids[userParameters.i]);
            string output =
               $"Id –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è: {announcment.autoData.autoId}\n–ú–∞—Ä–∫–∞: {announcment.markName}\n–ú–æ–¥–µ–ª—å: {announcment.modelName}\n–ü—Ä–æ–±—ñ–≥: {announcment.autoData.race}\n–¢–∏–ø –ø–∞–ª–∏–≤–∞: {announcment.autoData.fuelName}\n–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á: {announcment.autoData.gearboxName}\n–†—ñ–∫: {announcment.autoData.year}\n–õ–æ–∫–∞—Ü—ñ—è: {announcment.locationCityName}\n–¶—ñ–Ω–∞ –≤ $: {announcment.USD}\n–¶—ñ–Ω–∞ –≤ ‚Ç¥: {announcment.UAH}\n–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ:\nhttps://auto.ria.com{announcment.linkToView}";
            await botClient.SendPhotoAsync(message.Chat.Id, InputFile.FromUri(announcment.photoData.seoLinkF),
               caption: output, replyMarkup: nextKeyboard);
            userParameters.YTMark = announcment.markName;
            userParameters.YTModel = announcment.modelName;
            userParameters.YTYear = announcment.autoData.year;
            userParameters.GMLocation = announcment.locationCityName;
            userParameters.id = announcment.autoData.autoId;
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: startKeyBoard);
         }
      }
      else if (message.Text == "üïµÔ∏è‚Äç‚ôÇÔ∏è–î–µ—Ç–∞–ª—å–Ω–∏–π –ø–æ—à—É–∫")
      {
         try
         {
            searchRequest[message.Chat.Id] = "Search";
            await botClient.SendTextMessageAsync(message.Chat.Id, "–î–ª—è –ø–æ—à—É–∫—É –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —ñ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üñ•–†–æ–∑–ø–æ—á–∞—Ç–∏ –ø–æ—à—É–∫'",
               replyMarkup: menuKeyboard);
            await botClient.SendTextMessageAsync(message.Chat.Id,
               $"–í–∞—à—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞—Ä–∞–∑:\n\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}");
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: startKeyBoard);
         }
      }
      else if (message.Text == "üíå–û–±—Ä–∞–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è")
      {
         try
         {
            userParameters.favIds = await generalClient.GetDBIds(message.Chat.Id);
            if (userParameters.favIds.Count == 0)
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, "–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –æ–≥–æ–ª–æ—à–µ–Ω—å —É –æ–±—Ä–∞–Ω–æ–º—É", replyMarkup: startKeyBoard);
            }
            else
            {
               var announcment = await generalClient.GetInfo(userParameters.favIds[userParameters.k]);
               string output =
                  $"–ú–∞—Ä–∫–∞: {announcment.markName}\n–ú–æ–¥–µ–ª—å: {announcment.modelName}\n–ü—Ä–æ–±—ñ–≥: {announcment.autoData.race}\n–¢–∏–ø –ø–∞–ª–∏–≤–∞: {announcment.autoData.fuelName}\n–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á: {announcment.autoData.gearboxName}\n–†—ñ–∫: {announcment.autoData.year}\n–õ–æ–∫–∞—Ü—ñ—è: {announcment.locationCityName}\n–¶—ñ–Ω–∞ –≤ $: {announcment.USD}\n–¶—ñ–Ω–∞ –≤ ‚Ç¥: {announcment.UAH}\n–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ:\nhttps://auto.ria.com{announcment.linkToView}";
               await botClient.SendPhotoAsync(message.Chat.Id, InputFile.FromUri(announcment.photoData.seoLinkF),
                  caption: output, replyMarkup: favKeyboard);
               userParameters.id = announcment.autoData.autoId;
            }
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: startKeyBoard);
         }
      }
      else if (message.Text == "‚óÄÔ∏è")
      {
         try
         {
            if (userParameters.k > 0)
            {
               userParameters.k--;
               var announcment = await generalClient.GetInfo(userParameters.favIds[userParameters.k]);
               string output =
                  $"–ú–∞—Ä–∫–∞: {announcment.markName}\n–ú–æ–¥–µ–ª—å: {announcment.modelName}\n–ü—Ä–æ–±—ñ–≥: {announcment.autoData.race}\n–¢–∏–ø –ø–∞–ª–∏–≤–∞: {announcment.autoData.fuelName}\n–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á: {announcment.autoData.gearboxName}\n–†—ñ–∫: {announcment.autoData.year}\n–õ–æ–∫–∞—Ü—ñ—è: {announcment.locationCityName}\n–¶—ñ–Ω–∞ –≤ $: {announcment.USD}\n–¶—ñ–Ω–∞ –≤ ‚Ç¥: {announcment.UAH}\n–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ:\nhttps://auto.ria.com{announcment.linkToView}";
               await botClient.SendPhotoAsync(message.Chat.Id, InputFile.FromUri(announcment.photoData.seoLinkF),
                  caption: output, replyMarkup: favKeyboard);
               userParameters.id = announcment.autoData.autoId;
            }
            else
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, "–ü–æ–∑–∞–¥—É –Ω–µ–º–∞—î —ñ–Ω—à–∏—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å");
            }
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception);
         }
      }
      else if (message.Text == "‚ñ∂Ô∏è")
      {
         try
         {
            if (userParameters.k + 1 < userParameters.favIds.Count)
            {
               userParameters.k++;
               var announcment = await generalClient.GetInfo(userParameters.favIds[userParameters.k]);
               string output =
                  $"–ú–∞—Ä–∫–∞: {announcment.markName}\n–ú–æ–¥–µ–ª—å: {announcment.modelName}\n–ü—Ä–æ–±—ñ–≥: {announcment.autoData.race}\n–¢–∏–ø –ø–∞–ª–∏–≤–∞: {announcment.autoData.fuelName}\n–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á: {announcment.autoData.gearboxName}\n–†—ñ–∫: {announcment.autoData.year}\n–õ–æ–∫–∞—Ü—ñ—è: {announcment.locationCityName}\n–¶—ñ–Ω–∞ –≤ $: {announcment.USD}\n–¶—ñ–Ω–∞ –≤ ‚Ç¥: {announcment.UAH}\n–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ:\nhttps://auto.ria.com{announcment.linkToView}";
               await botClient.SendPhotoAsync(message.Chat.Id, InputFile.FromUri(announcment.photoData.seoLinkF),
                  caption: output, replyMarkup: favKeyboard);
               userParameters.id = announcment.autoData.autoId;
            }
            else
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, "–í–∞—à—ñ –æ–±—Ä–∞–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—å");
            }
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception);
         }
      }
      else if (message.Text == "üóëÔ∏è")
      {
         try
         {
            await generalClient.DeleteIdBD(Convert.ToString(userParameters.id), message.Chat.Id);
            userParameters.favIds = await generalClient.GetDBIds(message.Chat.Id);
            userParameters.k = userParameters.k-1;
            await botClient.SendTextMessageAsync(message.Chat.Id, $"–û–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑ id {userParameters.id} —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–µ —ñ–∑ –æ–±—Ä–∞–Ω–æ–≥–æ");
            
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: startKeyBoard);
         }
      }
      else if (message.Text == "üåå–ü–æ—Ä—ñ–≤–Ω—è—Ç–∏")
      {
         try
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, "–í–≤–µ–¥—ñ—Ç—å id –¥—Ä—É–≥–æ–≥–æ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è");
            userStage[message.Chat.Id] = "Compare";
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception);
         }
      }
      else if (message.Text == "üöò–ú–∞—Ä–∫–∞")
      {
         try
         {
            userParameters.model = "";
            marksList = await generalClient.GetMarks();
            var keyboardButtons = marksList.Select(x => new[]
            {
               new KeyboardButton(x.Name)
            }).ToArray();
            var marksKeyboard = new ReplyKeyboardMarkup(keyboardButtons) { ResizeKeyboard = true };
            await botClient.SendTextMessageAsync(message.Chat.Id, "–û–±–µ—Ä—ñ—Ç—å –º–∞—Ä–∫—É", replyMarkup: marksKeyboard);
            userStage[message.Chat.Id] = "Marka";
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception);
         }
      }
      else if (message.Text == "üèé–ú–æ–¥–µ–ª—å")
      {
         try
         {
            userParameters.markValue = await MarkValue2(marksList, userParameters.mark);
            userParameters.modelsList = await generalClient.GetModels(userParameters.markValue);
            var keyboardButtonsM = userParameters.modelsList.Select(x => new[] { new KeyboardButton(x.name) }).ToArray();
            var modelsKeyboard = new ReplyKeyboardMarkup(keyboardButtonsM) { ResizeKeyboard = true };
            await botClient.SendTextMessageAsync(message.Chat.Id, "–û–±–µ—Ä—ñ—Ç—å –º–æ–¥–µ–ª—å", replyMarkup: modelsKeyboard);
            userStage[message.Chat.Id] = "Model";
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, "–°–ø–æ—á–∞—Ç–∫—É –≤–∫–∞–∂—ñ—Ç—å –º–∞—Ä–∫—É!");
         }
      }
      else if (message.Text == "üí∏–¶—ñ–Ω–∞ —É $ –≤—ñ–¥")
      {
         await botClient.SendTextMessageAsync(message.Chat.Id, "–í–∫–∞–∂—ñ—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—É —Ü—ñ–Ω—É —É $");
         userStage[message.Chat.Id] = "PriceFrom";
      }
      else if (message.Text == "üí∞–¶—ñ–Ω–∞ —É $ –¥–æ")
      {
         await botClient.SendTextMessageAsync(message.Chat.Id, "–í–∫–∞–∂—ñ—Ç—å –∫—ñ–Ω—Ü–µ–≤—É —Ü—ñ–Ω—É —É $");
         userStage[message.Chat.Id] = "PriceTo";
      }
      else if (message.Text == "üìÖ–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥")
      {
         await botClient.SendTextMessageAsync(message.Chat.Id, "–í–∫–∞–∂—ñ—Ç—å –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä—ñ–∫\n–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è: 1900\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è: 2023");
         userStage[message.Chat.Id] = "StartYear";
      }
      else if (message.Text == "üóì–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ")
      {
         await botClient.SendTextMessageAsync(message.Chat.Id, "–í–∫–∞–∂—ñ—Ç—å –∫—ñ–Ω—Ü–µ–≤–∏–π —Ä—ñ–∫\n–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è: 1900\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è: 2023");
         userStage[message.Chat.Id] = "EndYear";
      }
      else if (message.Text == "üöÄ–î–æ –º–µ–Ω—é")
      {
         await botClient.SendTextMessageAsync(message.Chat.Id, "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é", replyMarkup: menuKeyboard);
      }
      else if (message.Text == "üßπ–û—á–∏—Å—Ç–∏—Ç–∏")
      {
         await botClient.SendTextMessageAsync(message.Chat.Id, "–í–∫–∞–∂—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä, —è–∫–∏–π —Ö–æ—á–µ—Ç–µ –æ—á–∏—Å—Ç–∏—Ç–∏",
            replyMarkup: paramsKeyboard);
         userStage[message.Chat.Id] = "Cleaning";
      }
      else if (message.Text == "üñ•–†–æ–∑–ø–æ—á–∞—Ç–∏ –ø–æ—à—É–∫")
      {
         try
         {
            if(userParameters.mark != "" && userParameters.model != "" && userParameters.startPrice > 0 && userParameters.endPrice > 0 && userParameters.startPrice<=userParameters.endPrice && userParameters.startYear <= userParameters.endYear && userParameters.startYear != 0 && userParameters.endYear != 0)
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, "–†–æ–∑–ø–æ—á–Ω–µ–º–æ –ø–æ—à—É–∫");
               userParameters.idsList = await generalClient.GetIds(userParameters.markValue, userParameters.modelValue, userParameters.startPrice, userParameters.endPrice, userParameters.startYear, userParameters.endYear);
               if (userParameters.idsList.result.search_result.ids.Count == 0)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –æ–≥–æ–ª–æ—à–µ–Ω—å –∑–∞ —Ç–∞–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏");
               }
               else if (userParameters.idsList.result.search_result.ids.Count != 0)
               {
                  var announcment = await generalClient.GetInfo(userParameters.idsList.result.search_result.ids[userParameters.i]);
                  string output =
                     $"Id –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è: {announcment.autoData.autoId}\n–ú–∞—Ä–∫–∞: {announcment.markName}\n–ú–æ–¥–µ–ª—å: {announcment.modelName}\n–ü—Ä–æ–±—ñ–≥: {announcment.autoData.race}\n–¢–∏–ø –ø–∞–ª–∏–≤–∞: {announcment.autoData.fuelName}\n–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á: {announcment.autoData.gearboxName}\n–†—ñ–∫: {announcment.autoData.year}\n–õ–æ–∫–∞—Ü—ñ—è: {announcment.locationCityName}\n–¶—ñ–Ω–∞ –≤ $: {announcment.USD}\n–¶—ñ–Ω–∞ –≤ ‚Ç¥: {announcment.UAH}\n–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ:\nhttps://auto.ria.com{announcment.linkToView}";
                  await botClient.SendPhotoAsync(message.Chat.Id, InputFile.FromUri(announcment.photoData.seoLinkF),
                     caption: output, replyMarkup: nextKeyboard);
                  userParameters.YTMark = announcment.markName;
                  userParameters.YTModel = announcment.modelName;
                  userParameters.YTYear = announcment.autoData.year;
                  userParameters.GMLocation = announcment.locationCityName;
                  userParameters.id = announcment.autoData.autoId;
               }
            }
            else
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, "–û–±–æ–≤'—è–∑–∫–æ–≤–æ –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ó—Ö –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å!", replyMarkup: menuKeyboard);
            }
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception);
         }
      }
      else if (message.Text == "‚û°Ô∏èÔ∏è")
      {
         try
         {
            if (userParameters.i + 1 < userParameters.idsList.result.search_result.ids.Count)
            {
               userParameters.YTMark = "";
               userParameters.YTModel = "";
               userParameters.YTYear = 0;
               userParameters.i++;
               var announcment = await generalClient.GetInfo(userParameters.idsList.result.search_result.ids[userParameters.i]);
               string output =
                  $"Id –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è: {announcment.autoData.autoId}\n–ú–∞—Ä–∫–∞: {announcment.markName}\n–ú–æ–¥–µ–ª—å: {announcment.modelName}\n–ü—Ä–æ–±—ñ–≥: {announcment.autoData.race}\n–¢–∏–ø –ø–∞–ª–∏–≤–∞: {announcment.autoData.fuelName}\n–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á: {announcment.autoData.gearboxName}\n–†—ñ–∫: {announcment.autoData.year}\n–õ–æ–∫–∞—Ü—ñ—è: {announcment.locationCityName}\n–¶—ñ–Ω–∞ –≤ $: {announcment.USD}\n–¶—ñ–Ω–∞ –≤ ‚Ç¥: {announcment.UAH}\n–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ:\nhttps://auto.ria.com{announcment.linkToView}";
               await botClient.SendPhotoAsync(message.Chat.Id, InputFile.FromUri(announcment.photoData.seoLinkF),
                  caption: output, replyMarkup: nextKeyboard);
               userParameters.YTMark = announcment.markName;
               userParameters.YTModel = announcment.modelName;
               userParameters.YTYear = announcment.autoData.year;
               userParameters.GMLocation = announcment.locationCityName;
               userParameters.id = announcment.autoData.autoId;
            }
            else
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, "–û–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—å");
            }
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception);
         }
      }
      else if (message.Text == "‚¨ÖÔ∏è")
      {
         try
         {
            if (userParameters.i > 0)
            {
               userParameters.YTMark = "";
               userParameters.YTModel = "";
               userParameters.YTYear = 0;
               userParameters.i--;
               var announcment = await generalClient.GetInfo(userParameters.idsList.result.search_result.ids[userParameters.i]);
               string output =
                  $"Id –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è: {announcment.autoData.autoId}\n–ú–∞—Ä–∫–∞: {announcment.markName}\n–ú–æ–¥–µ–ª—å: {announcment.modelName}\n–ü—Ä–æ–±—ñ–≥: {announcment.autoData.race}\n–¢–∏–ø –ø–∞–ª–∏–≤–∞: {announcment.autoData.fuelName}\n–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á: {announcment.autoData.gearboxName}\n–†—ñ–∫: {announcment.autoData.year}\n–õ–æ–∫–∞—Ü—ñ—è: {announcment.locationCityName}\n–¶—ñ–Ω–∞ –≤ $: {announcment.USD}\n–¶—ñ–Ω–∞ –≤ ‚Ç¥: {announcment.UAH}\n–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ:\nhttps://auto.ria.com{announcment.linkToView}";
               await botClient.SendPhotoAsync(message.Chat.Id, InputFile.FromUri(announcment.photoData.seoLinkF),
                  caption: output, replyMarkup: nextKeyboard);
               userParameters.YTMark = announcment.markName;
               userParameters.YTModel = announcment.modelName;
               userParameters.YTYear = announcment.autoData.year;
               userParameters.GMLocation = announcment.locationCityName;
               userParameters.id = announcment.autoData.autoId;
            }
            else
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, "–ü–æ–∑–∞–¥—É –Ω–µ–º–∞—î —ñ–Ω—à–∏—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å");
            }
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception);
         }
      }
      else if (message.Text == "ü§ñYoutube –æ–≥–ª—è–¥")
      {
         try
         {
            userParameters.youtubeVideo = await generalClient.GetVideo($"{userParameters.YTMark} {userParameters.YTModel} {userParameters.YTYear} Review");
            if (userParameters.youtubeVideo.items.Count == 0)
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, "–ù–∞ –∂–∞–ª—å, –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≤—ñ–¥–µ–æ –∑–∞—Ä–∞–∑ –Ω–µ–º–∞—î");
            }
            else
            {
               await botClient.SendTextMessageAsync(message.Chat.Id,
                  $"–Ø–∫—â–æ –¥–∞–Ω–µ –≤—ñ–¥–µ–æ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ç–µ–º—ñ, —Ü–µ –æ–∑–Ω–∞—á–∞—î —â–æ –ø–æ —Ü—å–æ–º—É –∞–≤—Ç–æ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –æ–≥–ª—è–¥—ñ–≤\n\n–í—ñ–¥–µ–æ–æ–≥–ª—è–¥ –Ω–∞ –¥–∞–Ω–µ –∞–≤—Ç–æ:\nhttps://www.youtube.com/watch?v={userParameters.youtubeVideo.items[userParameters.j].id.videoId}&ab_channel={userParameters.youtubeVideo.items[userParameters.j].snippet.channelTitle.Replace(" ","")}");
            }
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception);
         }
         
      }
      else if (message.Text == "üõ†–°–¢–û —É –º—ñ—Å—Ç—ñ")
      {
         try
         {
            userParameters.carsRepair = await generalClient.GetPlaces(userParameters.GMLocation);
            List<string> topAutoRepair = new List<string>();

            for (int i = 0; i < userParameters.carsRepair.Results.Count && i < 100; i++)
            {
               if (userParameters.carsRepair.Results[i].Rating >= 4.5)
               {
                  topAutoRepair.Add(userParameters.carsRepair.Results[i].Name);
               }
            }
            if (topAutoRepair.Count == 0)
            {
               await botClient.SendTextMessageAsync(message.Chat.Id,
                  "–ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –°–¢–û —É –º—ñ—Å—Ç—ñ –∑ —Ä–µ–π—Ç–∏–Ω–≥–æ–º –≤–∏—â–µ 4.5 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
            }
            else
            {
               string allAutoRepair = string.Join("\n", topAutoRepair);
               await botClient.SendTextMessageAsync(message.Chat.Id,
                  $"–¢–æ–ø –°–¢–û —É –º—ñ—Å—Ç—ñ {userParameters.GMLocation} –∑ —Ä–µ–π—Ç–∏–Ω–≥–æ–º 4,5 —ñ –≤–∏—â–µ:\n{allAutoRepair}");
            }
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception);
         }
      }
      else if (message.Text == "üíì")
      {
         try
         {
            userParameters.favIds = await generalClient.GetDBIds(message.Chat.Id);
            if (userParameters.favIds.Contains(userParameters.id.ToString()))
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, "–¶–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –≤–∂–µ —î —É –æ–±—Ä–∞–Ω–æ–º—É");
            }

            if (userParameters.id == 0)
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, "–ù–µ–º–æ–∂–ª–∏–≤–æ –¥–æ–¥–∞—Ç–∏");
            }
            else
            {
               await generalClient.AddId(userParameters.id.ToString(), message.Chat.Id);
               await botClient.SendTextMessageAsync(message.Chat.Id, $"–û–≥–æ–ª–æ—à–µ–Ω–Ω—è {userParameters.id} —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ —É –æ–±—Ä–∞–Ω–µ");
            }
         }
         catch
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception);
         }
      }
      else if (searchRequest[message.Chat.Id] == "Search")
      {
         if (userStage[message.Chat.Id] == "Compare")
         {
            try
            {
               if (Convert.ToInt32(message.Text) == userParameters.id)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ id");
                  userStage[message.Chat.Id] = "Compare";
               }
               else if (Convert.ToInt32(message.Text) != userParameters.id)
               {
                  List<string> compare = new List<string>();
               string id1 = message.Text;
               var infoOfFirst = await generalClient.GetInfo(userParameters.id.ToString());
               var infoOfSecond = await generalClient.GetInfo(id1);
               if (infoOfFirst.autoData.raceInt > infoOfSecond.autoData.raceInt)
               {
                  compare.Add(
                     $"–ü—Ä–æ–±—ñ–≥ –ø–µ—Ä—à–æ–≥–æ –∞–≤—Ç–æ {infoOfFirst.autoData.race} > –∑–∞ –ø—Ä–æ–±—ñ–≥ –¥—Ä—É–≥–æ–≥–æ {infoOfSecond.autoData.race}");
               }
               if (infoOfFirst.autoData.raceInt < infoOfSecond.autoData.raceInt)
               {
                  compare.Add(
                     $"–ü—Ä–æ–±—ñ–≥ –ø–µ—Ä—à–æ–≥–æ –∞–≤—Ç–æ {infoOfFirst.autoData.race} < –∑–∞ –ø—Ä–æ–±—ñ–≥ –¥—Ä—É–≥–æ–≥–æ {infoOfSecond.autoData.race}");
               }
               if (infoOfFirst.autoData.raceInt == infoOfSecond.autoData.raceInt)
               {
                  compare.Add($"–ü—Ä–æ–±—ñ–≥ –æ–¥–Ω–∞–∫–æ–≤–∏–π");
               }
               if (infoOfFirst.autoData.year > infoOfSecond.autoData.year)
               {
                  compare.Add(
                     $"–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –ø–µ—Ä—à–æ–≥–æ –∞–≤—Ç–æ {infoOfFirst.autoData.year} > –∑–∞ —Ä—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥—Ä—É–≥–æ–≥–æ {infoOfSecond.autoData.year}");
               }
               if (infoOfFirst.autoData.year < infoOfSecond.autoData.year)
               {
                  compare.Add(
                     $"–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –ø–µ—Ä—à–æ–≥–æ –∞–≤—Ç–æ {infoOfFirst.autoData.year} < –∑–∞ —Ä—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥—Ä—É–≥–æ–≥–æ {infoOfSecond.autoData.year}");
               }
               if (infoOfFirst.autoData.year == infoOfSecond.autoData.year)
               {
                  compare.Add($"–†–æ–∫–∏ –≤–∏–ø—É—Å–∫—É –æ–¥–Ω–∞–∫–æ–≤—ñ");
               }
               if (infoOfFirst.USD > infoOfSecond.USD)
               {
                  compare.Add($"–¶—ñ–Ω–∞ –ø–µ—Ä—à–æ–≥–æ –∞–≤—Ç–æ —É $: {infoOfFirst.USD} > –∑–∞ —Ü—ñ–Ω—É –¥—Ä—É–≥–æ–≥–æ –∞–≤—Ç–æ —É $: {infoOfSecond.USD}");
               }
               if (infoOfFirst.USD < infoOfSecond.USD)
               {
                  compare.Add($"–¶—ñ–Ω–∞ –ø–µ—Ä—à–æ–≥–æ –∞–≤—Ç–æ —É $ {infoOfFirst.USD} < –∑–∞ —Ü—ñ–Ω—É –¥—Ä—É–≥–æ–≥–æ –∞–≤—Ç–æ —É $ {infoOfSecond.USD}");
               }
               if (infoOfFirst.USD == infoOfSecond.USD)
               {
                  compare.Add($"–¶—ñ–Ω–∏ –æ–¥–Ω–∞–∫–æ–≤—ñ");
               }
               string car1Stats = $"–ú–∞—Ä–∫–∞: {infoOfFirst.markName}\n–ú–æ–¥–µ–ª—å: {infoOfFirst.modelName}\n–¢–∏–ø –ø–∞–ª–∏–≤–∞: {infoOfFirst.autoData.fuelName}";
               string car2Stats = $"–ú–∞—Ä–∫–∞: {infoOfSecond.markName}\n–ú–æ–¥–µ–ª—å: {infoOfSecond.modelName}\n–¢–∏–ø –ø–∞–ª–∏–≤–∞: {infoOfSecond.autoData.fuelName}";
               string allCompares = string.Join("\n\n", compare);
               await botClient.SendTextMessageAsync(message.Chat.Id,
                  $"–ü–µ—Ä—à–µ –∞–≤—Ç–æ:\n{car1Stats}\n\n–î—Ä—É–≥–µ –∞–≤—Ç–æ:\n{car2Stats}\n\n{allCompares}");
               userStage[message.Chat.Id] = "";
               }
            }
            catch
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: nextKeyboard);
               userStage[message.Chat.Id] = "";
            }
            
         }
         else if (userStage[message.Chat.Id] == "Cleaning")
         {
            if (message.Text == "üßΩ–ú–∞—Ä–∫–∞ —Ç–∞ –º–æ–¥–µ–ª—å")
            {
               try
               {
                  userParameters.mark = "";
                  userParameters.markValue = 0;
                  userParameters.model = "";
                  userParameters.modelValue = 0;
                  await botClient.SendTextMessageAsync(message.Chat.Id,
                     $"–ú–∞—Ä–∫–∞ —Ç–∞ –º–æ–¥–µ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ—á–∏—â–µ–Ω—ñ\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                     replyMarkup: paramsKeyboard);
                  userStage[message.Chat.Id] = "Cleaning";
               }
               catch
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
                  userStage[message.Chat.Id] = "";
               }
            }
            else if (message.Text == "üßº–ú–æ–¥–µ–ª—å")
            {
               try
               {
                  userParameters.model = "";
                  userParameters.modelValue = 0;
                  await botClient.SendTextMessageAsync(message.Chat.Id,
                     $"–ú–æ–¥–µ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                     replyMarkup: paramsKeyboard);

                  userStage[message.Chat.Id] = "Cleaning";
               }
               catch
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
                  userStage[message.Chat.Id] = "";
               }
            }

            else if (message.Text == "üßº–¶—ñ–Ω–∞ —É $ –≤—ñ–¥")
            {
               try
               {
                  userParameters.startPrice = 0;
                  await botClient.SendTextMessageAsync(message.Chat.Id,
                     $"–¶—ñ–Ω–∞ —É $ –≤—ñ–¥ —É—Å–ø—ñ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                     replyMarkup: paramsKeyboard);
                  userStage[message.Chat.Id] = "Cleaning";
               }
               catch
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
                  userStage[message.Chat.Id] = "";
               }
            }

            else if (message.Text == "üßΩ–¶—ñ–Ω–∞ —É $ –¥–æ")
            {
               try
               {
                  userParameters.endPrice = 0;
                  await botClient.SendTextMessageAsync(message.Chat.Id,
                     $"–¶—ñ–Ω–∞ —É $ –¥–æ —É—Å–ø—ñ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                     replyMarkup: paramsKeyboard);
                  userStage[message.Chat.Id] = "Cleaning";
               }
               catch
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
                  userStage[message.Chat.Id] = "";
               }
            }

            else if (message.Text == "üßΩ–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥")
            {
               try
               {
                  userParameters.startYear = 0;
                  await botClient.SendTextMessageAsync(message.Chat.Id,
                     $"–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ —É—Å–ø—ñ—à–Ω–æ –æ—á–∏—â–µ–Ω\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                     replyMarkup: paramsKeyboard);
                  userStage[message.Chat.Id] = "Cleaning";
               }
               catch
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
                  userStage[message.Chat.Id] = "";
               }
            }
            else if (message.Text == "üßº–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ")
            {
               try
               {
                  userParameters.endYear = 0;
                  await botClient.SendTextMessageAsync(message.Chat.Id,
                     $"–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ —É—Å–ø—ñ—à–Ω–æ –æ—á–∏—â–µ–Ω\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                     replyMarkup: paramsKeyboard);
                  userStage[message.Chat.Id] = "Cleaning";
               }
               catch
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
                  userStage[message.Chat.Id] = "";
               }
            }
            else
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, "–í–≤–µ–¥–µ–Ω –Ω–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä",
                  replyMarkup: paramsKeyboard);
               userStage[message.Chat.Id] = "Cleaning";
            }
         }

         else if (userStage[message.Chat.Id] == "Marka")
         {
            try
            {
               if (marksList.Any(m => m.Name == message.Text))
               {
                  userParameters.mark = message.Text;
                  await botClient.SendTextMessageAsync(message.Chat.Id,
                     $"–í–∏ –æ–±—Ä–∞–ª–∏ –º–∞—Ä–∫—É {userParameters.mark}\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                     replyMarkup: menuKeyboard);
                  userStage[message.Chat.Id] = "";
               }
               else
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ –º–∞—Ä–∫–∞");
                  userStage[message.Chat.Id] = "Marka";
               }
            }
            catch
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
               userStage[message.Chat.Id] = "";
            }
         }

         else if (userStage[message.Chat.Id] == "Model")
         {
            try
            {
               if (userParameters.markValue == 0)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–°–ø–æ—á–∞—Ç–∫—É –≤–≤–µ–¥—ñ—Ç—å –º–∞—Ä–∫—É!");
                  userStage[message.Chat.Id] = "Marka";
               }
               if (userParameters.modelsList.Any(m => m.name == message.Text))
               {
                  userParameters.model = message.Text;
                  userParameters.modelValue = await ModelValue(userParameters.modelsList);
                  await botClient.SendTextMessageAsync(message.Chat.Id,
                     $"–í–∏ –æ–±—Ä–∞–ª–∏ –º–æ–¥–µ–ª—å {userParameters.model}\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                     replyMarkup: menuKeyboard);
                  userStage[message.Chat.Id] = "";
               }
               else
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ –º–æ–¥–µ–ª—å!");
                  userStage[message.Chat.Id] = "Model";
               }
            }
            catch
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
               userStage[message.Chat.Id] = "";
            }
         }
         else if (userStage[message.Chat.Id] == "PriceFrom")
         {
            try
            {
               if (Convert.ToInt32(message.Text) > 0)
               {
                  if (userParameters.endPrice == 0)
                  {
                     userParameters.startPrice = Convert.ToInt32(message.Text);
                     userParameters.endPrice = Convert.ToInt32(message.Text);
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        $"–í–∏ –æ–±—Ä–∞–ª–∏ —Ü—ñ–Ω—É —É $ –≤—ñ–¥ {userParameters.startPrice}\n\n–Ü–¥–µ–Ω—Ç–∏—á–Ω—É —Ü—ñ–Ω—É –±—É–ª–æ –¥–æ–¥–∞–Ω–æ —É –ø–∞—Ä–∞–º–µ—Ç—Ä –∫—ñ–Ω—Ü–µ–≤–æ—ó —Ü—ñ–Ω–∏, –¥–ª—è –∑–º—ñ–Ω–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üí∞–¶—ñ–Ω–∞ —É $ –¥–æ' –∞–±–æ –æ—á–∏—Å—Ç—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó 'üßπ–û—á–∏—Å—Ç–∏—Ç–∏'\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                        replyMarkup: menuKeyboard);
                     userStage[message.Chat.Id] = "";
                  }
                  else if (Convert.ToInt32(message.Text) <= userParameters.endPrice)
                  {
                     userParameters.startPrice = Convert.ToInt32(message.Text);
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        $"–í–∏ –æ–±—Ä–∞–ª–∏ —Ü—ñ–Ω—É —É $ –≤—ñ–¥ {userParameters.startPrice}\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                        replyMarkup: menuKeyboard);
                     userStage[message.Chat.Id] = "";
                  }
                  else if (Convert.ToInt32(message.Text) > userParameters.endPrice)
                  {
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        "–¶—ñ–Ω–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –±—ñ–ª—å—à–æ—é –∑–∞ –∫—ñ–Ω—Ü–µ–≤—É!\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                     userStage[message.Chat.Id] = "PriceFrom";
                  }
               }
               else if (Convert.ToInt32(message.Text) <= 0)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–¶—ñ–Ω–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –º—ñ–Ω—É—Å–æ–≤–æ—é —Ç–∞ –¥–æ—Ä—ñ–≤–Ω—é–≤–∞—Ç–∏ –Ω—É–ª—é!\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                  userStage[message.Chat.Id] = "PriceFrom";
               }
               else
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–ü–æ–º–∏–ª–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤");
                  userStage[message.Chat.Id] = "PriceFrom";
               }
            }
            catch
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
               userStage[message.Chat.Id] = "";
            }
         }
         else if (userStage[message.Chat.Id] == "PriceTo")
         {
            try
            {
               if (Convert.ToInt32(message.Text) > 0 && Convert.ToInt32(message.Text) >= userParameters.startPrice)
               {
                  if (userParameters.startPrice == 0)
                  {
                     userParameters.endPrice = Convert.ToInt32(message.Text);
                     userParameters.startPrice = Convert.ToInt32(message.Text);
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        $"–í–∏ –æ–±—Ä–∞–ª–∏ —Ü—ñ–Ω—É —É $ –¥–æ {userParameters.endPrice}\n\n–Ü–¥–µ–Ω—Ç–∏—á–Ω—É —Ü—ñ–Ω—É –±—É–ª–æ –¥–æ–¥–∞–Ω–æ —É –ø–∞—Ä–∞–º–µ—Ç—Ä '–¶—ñ–Ω–∞ —É $ –≤—ñ–¥', –¥–ª—è –∑–º—ñ–Ω–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üí∏–¶—ñ–Ω–∞ —É $ –≤—ñ–¥' –∞–±–æ –æ—á–∏—Å—Ç—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó 'üßπ–û—á–∏—Å—Ç–∏—Ç–∏'\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                        replyMarkup: menuKeyboard);
                     userStage[message.Chat.Id] = "";
                  }
                  else if(Convert.ToInt32(message.Text) >= userParameters.startPrice)
                  {
                     userParameters.endPrice = Convert.ToInt32(message.Text);
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        $"–í–∏ –æ–±—Ä–∞–ª–∏ —Ü—ñ–Ω—É —É $ –¥–æ {userParameters.endPrice}\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                        replyMarkup: menuKeyboard);
                     userStage[message.Chat.Id] = "";
                  }
                  else if (Convert.ToInt32(message.Text) < userParameters.startPrice)
                  {
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        "–¶—ñ–Ω–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –º–µ–Ω—à–æ—é –∑–∞ –ø–æ—á–∞—Ç–∫–æ–≤—É!\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                     userStage[message.Chat.Id] = "PriceTo";
                  }
               }
               else if (Convert.ToInt32(message.Text) < userParameters.startPrice)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –º–µ–Ω—à–æ—é –∑–∞ –ø–æ—á–∞—Ç–∫–æ–≤—É!\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                  userStage[message.Chat.Id] = "PriceTo";
               }
               else if (Convert.ToInt32(message.Text) <= 0)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–¶—ñ–Ω–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –º—ñ–Ω—É—Å–æ–≤–æ—é —Ç–∞ –¥–æ—Ä—ñ–≤–Ω—é–≤–∞—Ç–∏ –Ω—É–ª—é!\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                  userStage[message.Chat.Id] = "PriceTo";
               }
               else
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–ü–æ–º–∏–ª–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤");
                  userStage[message.Chat.Id] = "PriceTo";
               }
            }
            catch
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
               userStage[message.Chat.Id] = "";
            }
         }
         else if (userStage[message.Chat.Id] == "StartYear")
         {
            try
            {
               if (Convert.ToInt32(message.Text) >= 1900 && Convert.ToInt32(message.Text) <= 2023 && Convert.ToInt32(message.Text) > 0)
               {
                  if (userParameters.endYear == 0)
                  {
                     userParameters.startYear = Convert.ToInt32(message.Text);
                     userParameters.endYear = Convert.ToInt32(message.Text);
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        $"–í–∏ –æ–±—Ä–∞–ª–∏ —Ä—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n\n–Ü–¥–µ–Ω—Ç–∏—á–Ω–∏–π —Ä—ñ–∫ –±—É–ª–æ –¥–æ–¥–∞–Ω–æ —É –ø–∞—Ä–∞–º–µ—Ç—Ä '–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ', –¥–ª—è –∑–º—ñ–Ω–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üóì–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ' –∞–±–æ –æ—á–∏—Å—Ç—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó 'üßπ–û—á–∏—Å—Ç–∏—Ç–∏'\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                        replyMarkup: menuKeyboard);
                     userStage[message.Chat.Id] = "";
                  }
                  else if(Convert.ToInt32(message.Text) <= userParameters.endYear)
                  {
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        $"–í–∏ –æ–±—Ä–∞–ª–∏ —Ä—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                        replyMarkup: menuKeyboard);
                     userStage[message.Chat.Id] = "";
                  }
                  else if (Convert.ToInt32(message.Text) > userParameters.endYear)
                  {
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        "–ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä—ñ–∫ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –±—ñ–ª—å—à–∏–π –∑–∞ –∫—ñ–Ω—Ü–µ–≤–∏–π!\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                     userStage[message.Chat.Id] = "StartYear";
                  }
               }
               else if (Convert.ToInt32(message.Text) < 1900)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–†—ñ–∫ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –º–µ–Ω—à–∏–º –∑–∞ 1900\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                  userStage[message.Chat.Id] = "StartYear";
               }
               else if (Convert.ToInt32(message.Text) > 2023)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id,
                     "–†—ñ–∫ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –±—ñ–ª—å—à–∏–º –∑–∞ 2023\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                  userStage[message.Chat.Id] = "StartYear";
               }
               else if (Convert.ToInt32(message.Text) < 0)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–†—ñ–∫ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –º—ñ–Ω—É—Å–æ–≤–∏–º!\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                  userStage[message.Chat.Id] = "StartYear";
               }
               else
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–ü–æ–º–∏–ª–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤");
                  userStage[message.Chat.Id] = "StartYear";
               }
            }
            catch
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
               userStage[message.Chat.Id] = "";
            }
         }
// else
         // { 
         //    userParameters.startYear = Convert.ToInt32(message.Text);
         //    await botClient.SendTextMessageAsync(message.Chat.Id,
         //       $"–í–∏ –æ–±—Ä–∞–ª–∏ —Ä—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startPrice}\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
         //       replyMarkup: menuKeyboard);
         //    userStage[message.Chat.Id] = "";
         // }
         else if (userStage[message.Chat.Id] == "EndYear")
         {
            try
            {
               //userParameters.endYear = Convert.ToInt32(message.Text);
               if (Convert.ToInt32(message.Text) >= 1900 && Convert.ToInt32(message.Text) <= 2023 && Convert.ToInt32(message.Text) > 0 && Convert.ToInt32(message.Text) >= userParameters.startYear)
               {
                  if (userParameters.startYear == 0)
                  {
                     userParameters.endYear = Convert.ToInt32(message.Text);
                     userParameters.startYear = Convert.ToInt32(message.Text);
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        $"–í–∏ –æ–±—Ä–∞–ª–∏ —Ä—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}\n\n–Ü–¥–µ–Ω—Ç–∏—á–Ω–∏–π —Ä—ñ–∫ –±—É–ª–æ –¥–æ–¥–∞–Ω–æ —É –ø–∞—Ä–∞–º–µ—Ç—Ä '–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥', –¥–ª—è –∑–º—ñ–Ω–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üìÖ–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥' –∞–±–æ –æ—á–∏—Å—Ç—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó 'üßπ–û—á–∏—Å—Ç–∏—Ç–∏'\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                        replyMarkup: menuKeyboard);
                     userStage[message.Chat.Id] = "";
                  }
                  else if (Convert.ToInt32(message.Text) >= userParameters.startYear)
                  {
                     userParameters.endYear = Convert.ToInt32(message.Text);
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        $"–í–∏ –æ–±—Ä–∞–ª–∏ —Ä—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}\n\n–û–±—Ä–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n–ú–∞—Ä–∫–∞ {userParameters.mark}\n–ú–æ–¥–µ–ª—å {userParameters.model}\n–ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.startPrice}\n–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ {userParameters.endPrice}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –≤—ñ–¥ {userParameters.startYear}\n–†—ñ–∫ –≤–∏–ø—É—Å–∫—É –¥–æ {userParameters.endYear}",
                        replyMarkup: menuKeyboard);
                     userStage[message.Chat.Id] = "";
                  }
                  else if (Convert.ToInt32(message.Text) < userParameters.startYear)
                  {
                     await botClient.SendTextMessageAsync(message.Chat.Id,
                        "–ö—ñ–Ω—Ü–µ–≤–∏–π —Ä—ñ–∫ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –º–µ–Ω—à–∏–º –∑–∞ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π!\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                  }
               }
               else if (Convert.ToInt32(message.Text) < 1900)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–†—ñ–∫ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –º–µ–Ω—à–∏–º –∑–∞ 1900\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                  userStage[message.Chat.Id] = "EndYear";
               }
               else if (Convert.ToInt32(message.Text) > 2023)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id,
                     "–†—ñ–∫ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –±—ñ–ª—å—à–∏–º –∑–∞ 2023\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                  userStage[message.Chat.Id] = "EndYear";
               }

               else if (Convert.ToInt32(message.Text) <= 0)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–†—ñ–∫ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –º—ñ–Ω—É—Å–æ–≤–∏–º —Ç–∞ —Ä—ñ–≤–Ω–∏–º 0!\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                  userStage[message.Chat.Id] = "EndYear";
               }
               else if (Convert.ToInt32(message.Text) < userParameters.startYear)
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–†—ñ–∫ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –º–µ–Ω—à–∏–º –∑–∞ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π!\n–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —â–µ —Ä–∞–∑");
                  userStage[message.Chat.Id] = "EndYear";
               }
               else
               {
                  await botClient.SendTextMessageAsync(message.Chat.Id, "–ü–æ–º–∏–ª–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤");
                  userStage[message.Chat.Id] = "EndYear";
               }
            }
            catch
            {
               await botClient.SendTextMessageAsync(message.Chat.Id, userParameters.exception, replyMarkup: menuKeyboard);
               userStage[message.Chat.Id] = "";
            }
         }
         else
         {
            await botClient.SendTextMessageAsync(message.Chat.Id, "–ü—Ä–∏—ó—Ö–∞–ª–∞ –ø–æ–º–∏–ª–∫–∞");
         }
      }
      else
      {
         await botClient.SendTextMessageAsync(message.Chat.Id, "–ü—Ä–∏—ó—Ö–∞–ª–∞ –ø–æ–º–∏–ª–∫–∞");
      }

      async Task<int> MarkValue2(List<Mark> marksList1, string mark)
      {
         foreach (var markInList in marksList1)
         {
            if (markInList.Name == mark)
            {
               return markInList.Value;
            }
         }

         throw new ArgumentException("Mark not found");
      }

      async Task<int> MarkValue(string markName, List<Mark> marksList)
      {
         foreach (var mark in marksList)
         {
            if (mark.Name.Equals(markName, StringComparison.OrdinalIgnoreCase))
            {
               return mark.Value;
            }
         }
         throw new ArgumentException("Mark not found");
      }

      async Task<int> ModelValue(List<Model> modelsList1)
      {
         foreach (var modelsInList in modelsList1)
         {
            if (modelsInList.name == userParameters.model)
            {
               return modelsInList.value;
            }
         }
         throw new ArgumentException("Model not found");
      }
   }
}

